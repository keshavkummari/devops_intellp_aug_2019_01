1. JAVA
2. MAVEN
3. Jenkins
4. Git & Github Repo Clone & Configuration
5. Jenkins(Plugins were installed 20 + 4)
6. Java, Maven & Git 
7. Executed a Job on CLI
(mvn clean, mvn clean package, mvn clean package deploy)
8. Jenkins (Jobs were created)
9. Maven with Jfrog Integration
10. Download, Install and Configure SonarQube
11. Maven with SonarQube Integration

File-1 : Project Code Repository i.e. devops 
    Branches :
        1. Master 
            - POM.xml 
                - XML Elements of Jfrog Artifactory 
File-2 : .m2/settings.xml  & settings-security.xml 


POM.xml :
		<surefire.version>2.17</surefire.version>
		<jacoco.version>0.7.9</jacoco.version>

			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-surefire-plugin</artifactId>
			  <version>${surefire.version}</version><!--$NO-MVN-MAN-VER$-->
			</plugin>
			<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>${jacoco.version}</version>
			    <executions>
			        <execution>
			            <id>default-prepare-agent</id>
			            <goals><goal>prepare-agent</goal></goals>
			        </execution>
			        <execution>
			            <id>default-report</id>
			            <phase>prepare-package</phase>
			            <goals><goal>report</goal></goals>
			        </execution>
			    </executions>
			</plugin>

STEP-2 : Go to Linux Machine(Jenkins) & do the Sonarqube integration 

# su - jenkins 
# cd .m2
# ls -lrt 
# vi settings.xml 

  <profile>
      <id>sonar</id>
      <activation>
          <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
          <sonar.host.url>http://54.145.55.200:9000</sonar.host.url>
          <sonar.login></sonar.login>
      </properties>
  </profile>


  mvn sonar:sonar 

  Github ---> Jenkins ---> Ansible ----> Playbook.yml :
                                            - Dockerfile 
                                                    docker pull tomcat
                                                    docker run -itd --name

Code Repo : devops 

CI/CD Pipeline Repo : ansible 

github.com ---> jenkins(CI) ----> sonarqube ---> Artifacts :

        libs-snapshot-local 
        libs-release-local 

        jenkins 

        mvn release:release 

        deploy to tomcat (EC2 instance ) or Docker container  : test.ckk.cloud qa.ckk.cloud 

        QA : Functional Testing   : selenium
             Performance Testing  : 
             Security Testing     : 

             Python with selenium 

acceptance.ckk.cloud 

https://www.ckk.cloud 